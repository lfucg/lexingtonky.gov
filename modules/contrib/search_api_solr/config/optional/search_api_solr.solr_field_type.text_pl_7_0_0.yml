langcode: en
status: true
dependencies:
  module:
    - search_api_solr
    - language
  config:
    - language.entity.pl
id: text_pl_7_0_0
label: 'Polish Text Field'
minimum_solr_version: 7.0.0
custom_code: ''
field_type_language_code: pl
domains: {}
field_type:
  name: text_pl
  class: solr.TextField
  positionIncrementGap: 100
  analyzers:
    -
      type: index
      charFilters:
        -
          class: solr.MappingCharFilterFactory
          mapping: accents_pl.txt
      tokenizer:
        class: solr.WhitespaceTokenizerFactory
      filters:
        -
          class: solr.WordDelimiterGraphFilterFactory
          protected: protwords_pl.txt
          # If non-zero, splits words at delimiters. For example:"CamelCase", "hot-spot" -> "Camel", "Case", "hot", "spot"
          generateWordParts: 1
          # If non-zero, splits numeric strings at delimiters:"1947-32" -> "1947", "32"
          generateNumberParts: 1
          splitOnCaseChange: 0
          splitOnNumerics: 1
          catenateWords: 1
          catenateNumbers: 1
          catenateAll: 0
          stemEnglishPossessive: 0
          preserveOriginal: 1
        -
          class: solr.LengthFilterFactory
          min: 2
          max: 100
        -
          class: solr.LowerCaseFilterFactory
        -
          class: solr.StopFilterFactory
          ignoreCase: true
          words: stopwords_pl.txt
        -
          class: solr.MorfologikFilterFactory
        -
          class: solr.RemoveDuplicatesTokenFilterFactory
    -
      type: query
      charFilters:
        -
          class: solr.MappingCharFilterFactory
          mapping: accents_pl.txt
      tokenizer:
        class: solr.WhitespaceTokenizerFactory
      filters:
        -
          class: solr.WordDelimiterGraphFilterFactory
          catenateNumbers: 0
          generateNumberParts: 1
          protected: protwords_pl.txt
          splitOnCaseChange: 0
          generateWordParts: 1
          preserveOriginal: 1
          catenateAll: 0
          catenateWords: 0
        -
          class: solr.LengthFilterFactory
          min: 2
          max: 100
        -
          class: solr.LowerCaseFilterFactory
        -
          class: solr.SynonymGraphFilterFactory
          synonyms: synonyms_pl.txt
          expand: true
          ignoreCase: true
        -
          class: solr.StopFilterFactory
          ignoreCase: true
          words: stopwords_pl.txt
        -
          class: solr.MorfologikFilterFactory
        -
          class: solr.RemoveDuplicatesTokenFilterFactory
unstemmed_field_type:
  name: text_unstemmed_pl
  class: solr.TextField
  positionIncrementGap: 100
  analyzers:
    -
      type: index
      charFilters:
        -
          class: solr.MappingCharFilterFactory
          mapping: accents_pl.txt
      tokenizer:
        class: solr.WhitespaceTokenizerFactory
      filters:
        -
          class: solr.WordDelimiterGraphFilterFactory
          protected: protwords_pl.txt
          # If non-zero, splits words at delimiters. For example:"CamelCase", "hot-spot" -> "Camel", "Case", "hot", "spot"
          generateWordParts: 1
          # If non-zero, splits numeric strings at delimiters:"1947-32" -> "1947", "32"
          generateNumberParts: 1
          splitOnCaseChange: 0
          splitOnNumerics: 1
          catenateWords: 1
          catenateNumbers: 1
          catenateAll: 0
          stemEnglishPossessive: 0
          preserveOriginal: 1
        -
          class: solr.LengthFilterFactory
          min: 2
          max: 100
        -
          class: solr.LowerCaseFilterFactory
        -
          class: solr.StopFilterFactory
          ignoreCase: true
          words: stopwords_pl.txt
        -
          class: solr.RemoveDuplicatesTokenFilterFactory
    -
      type: query
      charFilters:
        -
          class: solr.MappingCharFilterFactory
          mapping: accents_pl.txt
      tokenizer:
        class: solr.WhitespaceTokenizerFactory
      filters:
        -
          class: solr.WordDelimiterGraphFilterFactory
          catenateNumbers: 0
          generateNumberParts: 1
          protected: protwords_pl.txt
          splitOnCaseChange: 0
          generateWordParts: 1
          preserveOriginal: 1
          catenateAll: 0
          catenateWords: 0
        -
          class: solr.LengthFilterFactory
          min: 2
          max: 100
        -
          class: solr.LowerCaseFilterFactory
        -
          class: solr.SynonymGraphFilterFactory
          synonyms: synonyms_pl.txt
          expand: true
          ignoreCase: true
        -
          class: solr.StopFilterFactory
          ignoreCase: true
          words: stopwords_pl.txt
        -
          class: solr.RemoveDuplicatesTokenFilterFactory
collated_field_type:
  name: collated_pl
  class: solr.ICUCollationField
  locale: pl
  strength: primary
  caseLevel: false
solr_configs:
  searchComponents:
    -
      name: spellcheck
      class: solr.SpellCheckComponent
      lst:
        -
          name: spellchecker
          str:
            -
              name: name
              VALUE: pl
            -
              name: field
              VALUE: spellcheck_pl
            -
              name: classname
              VALUE: solr.DirectSolrSpellChecker
            -
              name: distanceMeasure
              VALUE: internal
            -
              name: accuracy
              VALUE: '0.5'
            -
              name: maxEdits
              VALUE: '2'
            -
              name: minPrefix
              VALUE: '1'
            -
              name: maxInspections
              VALUE: '5'
            -
              name: minQueryLength
              VALUE: '4'
            -
              name: maxQueryFrequency
              VALUE: '0.01'
            -
              name: thresholdTokenFrequency
              VALUE: '.01'
            -
              name: onlyMorePopular
              VALUE: 'true'
    -
      name: suggest
      class: solr.SuggestComponent
      lst:
        -
          name: suggester
          str:
            -
              name: name
              VALUE: pl
            -
              name: lookupImpl
              VALUE: AnalyzingInfixLookupFactory
            -
              name: dictionaryImpl
              VALUE: DocumentDictionaryFactory
            -
              name: field
              VALUE: twm_suggest
            -
              name: suggestAnalyzerFieldType
              VALUE: text_pl
            -
              name: contextField
              VALUE: sm_context_tags
            -
              name: buildOnCommit
              VALUE: 'true'
            -
              name: buildOnStartup
              VALUE: 'false'
text_files:
  stopwords: |
    ach
    aj
    albo
    bardzo
    bez
    bo
    być
    ci
    cię
    ciebie
    co
    czy
    daleko
    dla
    dlaczego
    dlatego
    do
    dobrze
    dokąd
    dość
    dużo
    dwa
    dwaj
    dwie
    dwoje
    dziś
    dzisiaj
    gdyby
    gdzie
    go
    ich
    ile
    im
    inny
    ja
    ją
    jak
    jakby
    jaki
    je
    jeden
    jedna
    jedno
    jego
    jej
    jemu
    jeśli
    jest
    jestem
    jeżeli
    już
    każdy
    kiedy
    kierunku
    kto
    ku
    lub
    ma
    mają
    mam
    mi
    mną
    mnie
    moi
    mój
    moja
    moje
    może
    mu
    my
    na
    nam
    nami
    nas
    nasi
    nasz
    nasza
    nasze
    natychmiast
    nią
    nic
    nich
    nie
    niego
    niej
    niemu
    nigdy
    nim
    nimi
    niż
    obok
    od
    około
    on
    ona
    one
    oni
    ono
    owszem
    po
    pod
    ponieważ
    przed
    przedtem
    są
    sam
    sama
    się
    skąd
    tak
    taki
    tam
    ten
    to
    tobą
    tobie
    tu
    tutaj
    twoi
    twój
    twoja
    twoje
    ty
    wam
    wami
    was
    wasi
    wasz
    wasza
    wasze
    we
    więc
    wszystko
    wtedy
    wy
    żaden
    zawsze
    że
  synonyms: |
    drupal, durpal
  nouns: |
  protwords: |
  accents: |
    # À => A
    "\u00C0" => "A"
    # Á => A
    "\u00C1" => "A"
    # Â => A
    "\u00C2" => "A"
    # Ã => A
    "\u00C3" => "A"
    # Ä => A
    "\u00C4" => "A"
    # Å => A
    "\u00C5" => "A"
    # Ą => A
    #"\u0104" => "A"
    # Æ => AE
    "\u00C6" => "AE"
    # Ç => C
    "\u00C7" => "C"
    # Ć => C
    #"\U0106" => "C"
    # È => E
    "\u00C8" => "E"
    # É => E
    "\u00C9" => "E"
    # Ê => E
    "\u00CA" => "E"
    # Ë => E
    "\u00CB" => "E"
    # Ę => E
    #"\u0118" => "E"
    # Ì => I
    "\u00CC" => "I"
    # Í => I
    "\u00CD" => "I"
    # Î => I
    "\u00CE" => "I"
    # Ï => I
    "\u00CF" => "I"
    # Ĳ => IJ
    "\u0132" => "IJ"
    # Ð => D
    "\u00D0" => "D"
    # Ł => L
    #"\u0141" => "L"
    # Ñ => N
    "\u00D1" => "N"
    # Ń => N
    #"\u0143" => "N"
    # Ò => O
    "\u00D2" => "O"
    # Ó => O
    #"\u00D3" => "O"
    # Ô => O
    "\u00D4" => "O"
    # Õ => O
    "\u00D5" => "O"
    # Ö => O
    "\u00D6" => "O"
    # Ø => O
    "\u00D8" => "O"
    # Œ => OE
    "\u0152" => "OE"
    # Þ
    "\u00DE" => "TH"
    # Ù => U
    "\u00D9" => "U"
    # Ú => U
    "\u00DA" => "U"
    # Û => U
    "\u00DB" => "U"
    # Ü => U
    "\u00DC" => "U"
    # Ý => Y
    "\u00DD" => "Y"
    # Ÿ => Y
    "\u0178" => "Y"
    # à => a
    "\u00E0" => "a"
    # á => a
    "\u00E1" => "a"
    # â => a
    "\u00E2" => "a"
    # ã => a
    "\u00E3" => "a"
    # ä => a
    "\u00E4" => "a"
    # å => a
    "\u00E5" => "a"
    # æ => ae
    "\u00E6" => "ae"
    # ç => c
    "\u00E7" => "c"
    # è => e
    "\u00E8" => "e"
    # é => e
    "\u00E9" => "e"
    # ê => e
    "\u00EA" => "e"
    # ë => e
    "\u00EB" => "e"
    # ì => i
    "\u00EC" => "i"
    # í => i
    "\u00ED" => "i"
    # î => i
    "\u00EE" => "i"
    # ï => i
    "\u00EF" => "i"
    # ĳ => ij
    "\u0133" => "ij"
    # ð => d
    "\u00F0" => "d"
    # ñ => n
    "\u00F1" => "n"
    # ò => o
    "\u00F2" => "o"
    # ó => o
    #"\u00F3" => "o"
    # ô => o
    "\u00F4" => "o"
    # õ => o
    "\u00F5" => "o"
    # ö => o
    "\u00F6" => "o"
    # ø => o
    "\u00F8" => "o"
    # œ => oe
    "\u0153" => "oe"
    # ß => ss
    "\u00DF" => "ss"
    # Ś => S
    #"\u015a" => "S"
    # þ => th
    "\u00FE" => "th"
    # ù => u
    "\u00F9" => "u"
    # ú => u
    "\u00FA" => "u"
    # û => u
    "\u00FB" => "u"
    # ü => u
    "\u00FC" => "u"
    # ý => y
    "\u00FD" => "y"
    # ÿ => y
    "\u00FF" => "y"
    # Ź => Z
    #"\u0179" => "Z"
    # Ż => Z
    #"\u017b" => "Z"
    # ﬀ => ff
    "\uFB00" => "ff"
    # ﬁ => fi
    "\uFB01" => "fi"
    # ﬂ => fl
    "\uFB02" => "fl"
    # ﬃ => ffi
    "\uFB03" => "ffi"
    # ﬄ => ffl
    "\uFB04" => "ffl"
    # ﬅ => st
    "\uFB05" => "st"
    # ﬆ => st
    "\uFB06" => "st"
    # Māori macrons.
    # Ā => A
    "\u0100" => "A"
    # Ē => E
    "\u0112" => "E"
    # Ī => I
    "\u012A" => "I"
    # Ō => O
    "\u014C" => "O"
    # Ū => U
    "\u016A" => "U"
    # ā => a
    "\u0101" => "a"
    # ē => e
    "\u0113" => "e"
    # ī => i
    "\u012B" => "i"
    # ō => o
    "\u014D" => "o"
    # ū => u
    "\u016B" => "u"
